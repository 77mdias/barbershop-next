# ===============================================
# üê≥ DOCKERFILE PARA PRODU√á√ÉO
# ===============================================
# Build multi-stage otimizado para produ√ß√£o
# com imagem m√≠nima e seguran√ßa

# ==================
# STAGE 1: Builder (compila√ß√£o)
# ==================
FROM node:20-alpine AS builder
WORKDIR /app

# Copiar todos os arquivos de configura√ß√£o e source
COPY package*.json ./
COPY prisma ./prisma/
COPY src ./src/
COPY public ./public/
COPY next.config.mjs ./
COPY tsconfig.json ./
COPY tailwind.config.js ./
COPY postcss.config.mjs ./
COPY components.json ./

# Instalar depend√™ncias
RUN npm ci

# Gerar Prisma Client
RUN npx prisma generate

# Build da aplica√ß√£o
RUN npm run build

# ==================
# STAGE 2: Runner (Produ√ß√£o)
# ==================
FROM node:20-alpine AS runner
WORKDIR /app

# Configurar timezone (remover wget por enquanto)
RUN apk update && apk add --no-cache tzdata || echo "Warning: tzdata package failed to install"
ENV TZ=America/Sao_Paulo

# Configura√ß√µes de produ√ß√£o
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Criar usu√°rio n√£o-root
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Copiar depend√™ncias de produ√ß√£o
COPY --from=builder /app/package*.json ./
RUN npm ci --only=production --ignore-scripts && npm cache clean --force

# Copiar arquivos essenciais
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

# Ajustar permiss√µes
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expor porta
EXPOSE 3000

# Comando de produ√ß√£o
CMD ["npm", "start"]