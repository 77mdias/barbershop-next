# ===============================================
# üê≥ DOCKER COMPOSE - DEVCONTAINER OVERRIDES
# ===============================================
# Configura√ß√µes espec√≠ficas para o ambiente devcontainer
# que complementam o docker-compose.yml principal

services:
  # ==================
  # üöÄ APLICA√á√ÉO - DEVCONTAINER
  # ==================
  app:
    # Sobrescrever comando para manter container ativo
    command: sleep infinity

    # Vari√°veis de ambiente espec√≠ficas para devcontainer
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/barbershop_dev
      - DIRECT_URL=postgresql://postgres:postgres@db:5432/barbershop_dev
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-key-change-in-production

    # Volumes adicionais para desenvolvimento
    volumes:
      # Mount direto do c√≥digo sem volumes nomeados para evitar problemas de permiss√£o
      - .:/app:cached

      # Cache para melhor performance
      - ~/.npm:/home/node/.npm:cached
      - ~/.cache:/home/node/.cache:cached

    # Configura√ß√µes de usu√°rio para evitar problemas de permiss√£o
    user: node

    # Garantir que o container n√£o pare
    stdin_open: true
    tty: true

    # Configura√ß√µes de desenvolvimento
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
        - action: sync
          path: ./public
          target: /app/public
        - action: sync+restart
          path: ./package.json
          target: /app/package.json
        - action: sync+restart
          path: ./prisma
          target: /app/prisma

  # ==================
  # üìä BANCO DE DADOS - DEVCONTAINER
  # ==================
  db:
    # Configura√ß√µes espec√≠ficas para desenvolvimento em container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=barbershop_dev
      # Configura√ß√µes adicionais para desenvolvimento
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256

    # Volume persistente espec√≠fico para devcontainer
    volumes:
      - barbershop_pgdata_devcontainer:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro

    # Configura√ß√µes de performance para desenvolvimento
    command: >
      postgres 
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

# ==================
# üåê VOLUMES ESPEC√çFICOS
# ==================
volumes:
  # Dados do PostgreSQL espec√≠ficos para devcontainer
  barbershop_pgdata_devcontainer:
    driver: local
